#!/usr/bin/env bash

function wait_for_mongod_logline {
    # Make sure log file exists first
    MAXLOOPS=50
    while [ ! -f /var/log/mongodb/mongod.log ] && [ $MAXLOOPS -gt 0 ]; do
        sleep 0.1
        MAXLOOPS=$(expr $MAXLOOPS - 1)
        echo -n "!"
    done

    # Wait for log line
    LOGLINE=$1
    MAXLOOPS=50
    while [ $(tail -5 /var/log/mongodb/mongod.log | grep -q "$LOGLINE" && echo "Y" || echo "N") == "N" ] && [ $MAXLOOPS -gt 0 ]; do
        sleep 0.1
        MAXLOOPS=$(expr $MAXLOOPS - 1)
        echo -n "."
    done
    echo
}

function wait_for_mongod_to_start {
    wait_for_mongod_logline "waiting for connections on port"
}

function lock {
    LOCKFILE=${MONGO_SHARE}/alockfile
    exec 200> ${LOCKFILE}
    flock -n 200 && return 0 || return 1
}

function initiate_replica {
    LOCKFILE=${MONGO_SHARE}/alockfile
    GOT_LOCK=0
    SECONDARY=0
    HOSTNAME=$(hostname)
    while [ $GOT_LOCK -eq 0 ]; do
        lock
        if [ $? -eq 0 ] ; then
            echo 'Got lock'
            GOT_LOCK=1
            # This folder is where we heartbeat our hostnames
            for HOSTPATH in $(find ${REPLICA_SET_HOME} -type f -mmin -1); do
                SECONDARY=1
                MONGO_HOST=$(basename $HOSTPATH)
                cat > /tmp/initiate_replica.js << EOF
conn = new Mongo("$MONGO_HOST");
db = conn.getDB("admin");
// wrong user for remote db... db.auth("$ADMINUSER", "$ADMINPASS");
var replica_state = rs.isMaster();
if (replica_state['ismaster'] == true) {
    rs.add("$HOSTNAME")
    printjson("INFO: Added $HOSTNAME to $MONGO_HOST")
}
EOF
            break
            done
        else
            echo 'No lock'
            sleep 1
        fi
    done

    rm -f ${LOCKFILE}
    echo "Removed lockfile"

    if [ $SECONDARY -eq 0 ]; then
        echo "Configuring as primary"
        cat > /tmp/initiate_replica.js << EOF
conn = new Mongo();
db = conn.getDB("admin");
db.auth("$ADMINUSER", "$ADMINPASS");
rs.initiate();
EOF

        mongo /tmp/initiate_replica.js
    fi
}

function hearbeat {
    HOSTPATH=$REPLICA_SET_HOME/$(hostname)
    while [ 1 ]; do
        touch $HOSTPATH
        sleep 30
    done
}

export REPLICA_SET_HOME=${MONGO_SHARE}/${REPLICA_SET}
mkdir -p ${REPLICA_SET_HOME}

wait_for_mongod_to_start
initiate_replica
hearbeat
