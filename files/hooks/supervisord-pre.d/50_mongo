#!/usr/bin/env bash

function wait_for_mongod_logline {
    # Make sure log file exists first
    MAXLOOPS=50
    while [ ! -f /var/log/mongodb/mongod.log ] && [ $MAXLOOPS -gt 0 ]; do
        sleep 0.1
        MAXLOOPS=$(expr $MAXLOOPS - 1)
        echo -n "!"
    done

    # Wait for log line
    LOGLINE=$1
    MAXLOOPS=50
    while [ $(tail -5 /var/log/mongodb/mongod.log | grep -q "$LOGLINE" && echo "Y" || echo "N") == "N" ] && [ $MAXLOOPS -gt 0 ]; do
        sleep 0.1
        MAXLOOPS=$(expr $MAXLOOPS - 1)
        echo -n "."
    done
    echo
}

function wait_for_mongod_to_start {
    wait_for_mongod_logline "waiting for connections on port"
}

function wait_for_mongod_to_stop {
    wait_for_mongod_logline "shutting down with code"
}

function start_mongod {
    /usr/bin/mongod -f /etc/mongod.conf &
    wait_for_mongod_to_start
}

function stop_mongod {
    kill %1
    wait_for_mongod_to_stop
}

function ensure_adminuser_exists {
    cat > /tmp/setup.js << EOF
conn = new Mongo();
db = conn.getDB("admin");
var users = db.getUsers();
// printjson(users);

var exists = false;
for (var i = 0; i < users.length; i++) {
    if (users[i]["user"] == "$ADMINUSER") {
        exists = true;
    }
}

if (!exists) {
    printjson("Creating '$ADMINUSER' user");
    db.createUser(
        {
            user: "$ADMINUSER",
            pwd: "$ADMINPASS",
            roles: [ { role: "root", db: "admin" } ]
      }
    );
} else {
    printjson("Admin user '$ADMINUSER' exists, not creating");
}
EOF

    mongo /tmp/setup.js
}

function create_keyfile_if_missing {
    # Taken from https://docs.mongodb.com/v2.6/tutorial/deploy-replica-set-with-auth/
    if [ ! -f ${MONGO_SHARE}/mongodb-file ]; then
        openssl rand -base64 741 > ${MONGO_SHARE}/mongodb-keyfile
        chmod 600 ${MONGO_SHARE}/mongodb-keyfile
    fi
}

function configure_supervisor {
    [ -z $REPLICA_SET ] && REPLICA_SET="rs0"
    echo "Mongo will start in replica set '$REPLICA_SET'"
    sed -i -e "s|<REPLICA_SET>|$REPLICA_SET|" \
           -e "s|<MONGO_SHARE>|$MONGO_SHARE|" /etc/supervisor/conf.d/mongod.conf
}

start_mongod
ensure_adminuser_exists
stop_mongod
create_keyfile_if_missing
configure_supervisor
